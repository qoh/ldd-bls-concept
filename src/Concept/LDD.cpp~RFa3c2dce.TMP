#include "stdafx.h"

// Concept
#include <Concept/LDD.h>

namespace concept {

lddGroup *lddGroup::CreateFromFile(const char *file)
{
	printf("Creating lddGroup from <%s>\n", file);
	
	// REF: http://pugixml.org/docs/quickstart.html
	pugi::xml_document doc;

	// Read file
	{
		pugi::xml_parse_result result = doc.load_file(file);
		if (result == false)
			return nullptr;
	}

	// Grab root lxfml node
	pugi::xml_node lxfml = doc.child("LXFML");
	if (lxfml == false)
		return nullptr;

	// Grab bricks
	pugi::xml_node bricks = lxfml.child("Bricks");
	if (bricks == false)
		return nullptr;

	lddGroup *group = new lddGroup();

	// Parse bricks
	for (pugi::xml_node brick = bricks.child("Brick"); brick; brick = brick.next_sibling("Brick")) {
		pugi::xml_node part = brick.child("Part");
		pugi::xml_node bone = part.child("Bone");

		// This is a reference to a unique brick model
		int designID(brick.attribute("designID").as_int());
	
		string rgba(part.attribute("RGBA").as_string());
		float r,g,b,a;

		printf("DesignID: %d\n", designID);
		printf("RGBA: %s\n", rgba.c_str());

	}


	return group;
}

}